{"version":3,"sources":["assets/index.tsx","assets/images/linux_penguin.jpg","assets/images/emre_portrait.jpeg","assets/images/tux_penguin.png","assets/images/rain_matrix.jpg","component/infoLink/InfoLink.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["wallpaper","InfoLink","title","url","className","href","target","rel","styles","body","background","bodyOverlay","backgroundColor","overflow","jumbotron","color","INFO_LINK_LIST","App","id","style","Container","fluid","Row","Col","lg","Jumbotron","Image","roundedCircle","src","maxWidth","map","each","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAKMA,GCLS,ICAA,ICAA,ICAA,IAA0B,yCCK5BC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAV,OACtB,mBACEC,UAAU,uCACVC,KAAMF,EACNG,OAAO,SACPC,IAAI,sBAJN,SAME,4BAAIL,QCDFM,EAAS,CACbC,KAAM,CAEJC,WAAW,OAAD,OAASV,EAAT,MAEZW,YAAa,CAEXC,gBAAiB,wBACjBC,SAAU,QAEZC,UAAW,CACTF,gBAAiB,wBACjBG,MAAO,UAILC,EAAsC,CAC1C,CACEb,IACE,2EACFD,MAAO,eAET,CAAEC,IAAK,2BAA4BD,MAAO,eAC1C,CAAEC,IAAK,gCAAiCD,MAAO,UAC/C,CACEC,IAAK,yCACLD,MAAO,aA+CIe,EA3CH,WACV,OACE,qBAAKC,GAAG,MAAMd,UAAU,SAASe,MAAOX,EAAOC,KAA/C,SACE,qBAAKS,GAAG,UAAUd,UAAU,SAASe,MAAOX,EAAOG,YAAnD,SACE,cAACS,EAAA,EAAD,CAAWC,OAAK,EAACjB,UAAU,SAA3B,SACE,cAACkB,EAAA,EAAD,CAAKlB,UAAU,+BAAf,SACE,cAACmB,EAAA,EAAD,CAAKC,GAAG,IAAIpB,UAAU,gCAAtB,SACE,eAACqB,EAAA,EAAD,CAAWN,MAAOX,EAAOM,UAAzB,UACE,2DACA,mDACA,cAACY,EAAA,EAAD,CACEC,eAAa,EACbN,OAAK,EACLO,IAAI,yGACJxB,UAAU,qBACVe,MAAO,CACLU,SAAU,WAGd,oBAAIzB,UAAU,kCAAd,2RAOA,qBAAIA,UAAU,OAAd,wCAC6B,uBAD7B,WAGA,oBAAIA,UAAU,OAAd,SACGY,EAAec,KAAI,SAACC,GAAD,OAClB,cAAC,EAAD,CAAU7B,MAAO6B,EAAK7B,MAAOC,IAAK4B,EAAK5B,yBC1D5C6B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.067399f5.chunk.js","sourcesContent":["import linuxPenguin from \"./images/linux_penguin.jpg\";\nimport emrePortrait from \"./images/emre_portrait.jpeg\";\nimport tuxPenguin from \"./images/tux_penguin.png\";\nimport rainMatrix from \"./images/rain_matrix.jpg\";\n\nconst wallpaper = rainMatrix;\nexport { wallpaper, emrePortrait, linuxPenguin, tuxPenguin, rainMatrix };\n","export default __webpack_public_path__ + \"static/media/linux_penguin.8fba1c0a.jpg\";","export default __webpack_public_path__ + \"static/media/emre_portrait.af48ca45.jpeg\";","export default __webpack_public_path__ + \"static/media/tux_penguin.0ae4e4b0.png\";","export default __webpack_public_path__ + \"static/media/rain_matrix.b5771bac.jpg\";","import React from \"react\";\n\nimport \"./InfoLink.css\";\n\nexport type InfoLinkType = { title: string; url: string };\nexport const InfoLink = ({ title, url }: InfoLinkType) => (\n  <a\n    className=\"info-link d-block p-3 text-secondary\"\n    href={url}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    <b>{title}</b>\n  </a>\n);\n","import React from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\n\nimport { wallpaper } from \"./assets\";\nimport { InfoLink, InfoLinkType } from \"./component/infoLink/InfoLink\";\n\nconst styles = {\n  body: {\n    // Main Div element\n    background: `url(${wallpaper})`,\n  },\n  bodyOverlay: {\n    // Overlay to add transparanecy effect to bg image\n    backgroundColor: \"rgba(30, 30, 30, 0.7)\",\n    overflow: \"auto\",\n  },\n  jumbotron: {\n    backgroundColor: \"rgba(10, 10, 10, 0.8)\",\n    color: \"green\",\n  },\n};\n\nconst INFO_LINK_LIST: Array<InfoLinkType> = [\n  {\n    url:\n      \"https://maemresen.github.io/curriculum-vitae/cv_mehmet_arif_emre_sen.pdf\",\n    title: \"Personal CV\",\n  },\n  { url: \"https://www.yazilim.vip/\", title: \"Yazilim VIP\" },\n  { url: \"https://medium.com/@maemresen\", title: \"Medium\" },\n  {\n    url: \"https://www.linkedin.com/in/maemresen/\",\n    title: \"LinkedIn\",\n  },\n];\n\nconst App = () => {\n  return (\n    <div id=\"app\" className=\"vh-100\" style={styles.body}>\n      <div id=\"overlay\" className=\"vh-100\" style={styles.bodyOverlay}>\n        <Container fluid className=\"vh-100\">\n          <Row className=\"h-100 justify-content-center\">\n            <Col lg=\"6\" className=\"align-self-center text-center\">\n              <Jumbotron style={styles.jumbotron}>\n                <h1>Mehmet Arif Emre Åžen</h1>\n                <h4>(a.k.a maemresen)</h4>\n                <Image\n                  roundedCircle\n                  fluid\n                  src=\"https://avatars2.githubusercontent.com/u/17517090?s=460&u=a0e442b6913f827d2e51e00abe143b2dbc375f33&v=4\"\n                  className=\"border border-dark\"\n                  style={{\n                    maxWidth: \"200px\",\n                  }}\n                />\n                <h5 className=\"mt-4 text-secondary text-center\">\n                  I am an entrepreneur who wants to learn new technologies and\n                  use them to make things easier. My life goal is having my own\n                  job and creating a software community that everyone can get\n                  benefit from. I have deep interest to Object Oriented Paradigm\n                  And, I am a Linux User.\n                </h5>\n                <h3 className=\"mt-4\">\n                  Check Links Below for more <br />V V V\n                </h3>\n                <h5 className=\"mt-4\">\n                  {INFO_LINK_LIST.map((each) => (\n                    <InfoLink title={each.title} url={each.url}></InfoLink>\n                  ))}\n                </h5>\n              </Jumbotron>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}